{"version":3,"sources":["types/types.js","context/chat/chatReducer.js","context/chat/ChatContext.js","helpers/fetch.js","auth/AuthContext.js","context/SocketContext.js","hooks/useSocket.js","helpers/scrollToBottom.js","components/ChatSelect.js","components/Searchbox.js","components/SidebarChatItem.js","components/Sidebar.js","components/InboxPeople.js","components/IncomingMessage.js","components/OutgoingMessage.js","components/SendMessage.js","components/Messages.js","pages/ChatPage.js","pages/LoginPage.js","pages/RegisterPage.js","router/AuthRouter.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","ChatApp.js","index.js"],"names":["types","chatReducer","state","action","type","uid","chatActivo","usuarios","mensajes","payload","de","para","ChatContext","createContext","initialState","ChatProvider","children","useReducer","chatState","dispatch","Provider","value","baseUrl","process","REACT_APP_API_URL","fetchSinToken","endpoint","data","a","method","url","fetch","resp","json","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","AuthContext","checking","logged","name","email","AuthProvider","useState","auth","setAuth","useContext","login","password","ok","setItem","usuario","nombre","register","msg","verifyToken","useCallback","logout","removeItem","SocketContext","SocketProvider","serverPath","socket","setSocket","online","setOnline","connectSocket","socketTemp","io","connect","transports","autoConnect","forceNew","query","disconnectSocket","disconnect","useEffect","connected","on","useSocket","mensaje","id","animateScroll","scrollToBottom","containerId","duration","ChatSelect","className","Searchbox","onClick","SidebarChatItem","src","alt","Sidebar","filter","user","map","InboxPeople","IncomingMessage","fecha","OutgoingMessage","SendMessage","message","setMessage","onSubmit","e","preventDefault","length","emit","placeholder","onChange","target","Messages","_id","ChatPage","LoginPage","rememberme","form","setForm","Swal","fire","checked","readOnly","to","disabled","RegisterPage","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","ChatApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce879113.chunk.js","sourcesContent":["\r\nexport const types = {\r\n    usuariosCargados: '[Chat] Usuarios cargados',\r\n    activarChat: '[Chat] Activar Chat',\r\n    nuevoMensaje: '[Chat] Nuevo mensaje',\r\n    cargarMensajes: '[Chat] Cargar Mensajes',\r\n    cerrarSesion: '[Chat] Cerrar Sesión',\r\n}","import { types } from '../../types/types';\r\n\r\n\r\nexport const chatReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case types.cerrarSesion:\r\n            return {\r\n                uid: '',\r\n                chatActivo: null,\r\n                usuarios: [], \r\n                mensajes: []\r\n            }\r\n        case types.usuariosCargados:\r\n            return {\r\n                ...state,\r\n                usuarios: [ ...action.payload ]\r\n            }\r\n\r\n        case types.activarChat:\r\n            if (state.chatActivo === action.payload) return state;\r\n            return {\r\n                ...state,\r\n                chatActivo: action.payload,\r\n                mensajes: []\r\n            }\r\n        case types.nuevoMensaje:\r\n            if ( state.chatActivo === action.payload.de ||\r\n                 state.chatActivo === action.payload.para\r\n                ) {\r\n                return {\r\n                    ...state,\r\n                    mensajes: [...state.mensajes, action.payload ]\r\n                }\r\n            } else {\r\n                return state;\r\n            }\r\n        case types.cargarMensajes:\r\n            return {\r\n                ...state,\r\n                mensajes: [...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React,{ createContext, useReducer } from 'react';\r\nimport { chatReducer } from './chatReducer';\r\n\r\nexport const ChatContext = createContext();\r\n\r\nconst initialState = {\r\n    uid: '',\r\n    chatActivo: null, // UID del usuario al que yo quiero enviar mensajes\r\n    usuarios: [], // Todos los usuarios de la base de datos\r\n    mensajes: [] // El chat seleccionado\r\n}\r\n\r\nexport const ChatProvider = ({ children }) => {\r\n\r\n    const [chatState, dispatch] = useReducer(chatReducer, initialState);\r\n\r\n    return (\r\n        <ChatContext.Provider value={{\r\n            chatState,\r\n            dispatch\r\n        }}>\r\n            { children }\r\n        </ChatContext.Provider>\r\n    )\r\n}\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = async (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    if (method === 'GET') {\r\n        const resp = await fetch(url);\r\n        return await resp.json();\r\n    } else {\r\n        const resp = await fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n        return await resp.json();\r\n    }\r\n}\r\n\r\nexport const fetchConToken = async (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    if (method === 'GET') {\r\n        const resp = await fetch(url, {\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n        return await resp.json();\r\n    } else {\r\n        const resp = await fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n        return await resp.json();\r\n    }\r\n}","import React, { createContext, useCallback, useContext, useState } from \"react\";\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst initialState = {\r\n    uid: null,\r\n    checking: true,\r\n    logged: false,\r\n    name: null,\r\n    email: null\r\n};\r\n\r\n\r\n\r\nexport const AuthProvider = ({children}) => {\r\n\r\n    const [auth, setAuth] = useState(initialState);\r\n    const { dispatch } = useContext(ChatContext)\r\n\r\n    const login = async( email, password ) => {\r\n        const resp = await fetchSinToken('login', { email, password}, 'POST');\r\n        if ( resp.ok ) {\r\n            localStorage.setItem('token', resp.token );\r\n            const { usuario: {uid, nombre, email} } = resp;\r\n            setAuth({\r\n                uid: uid,\r\n                checking: false,\r\n                logged: true,\r\n                name: nombre,\r\n                email: email\r\n            });\r\n        }\r\n\r\n        return resp.ok;\r\n    }\r\n\r\n    const register = async ( nombre, email, password) => {\r\n        const resp = await fetchSinToken('login/new', { nombre, email, password}, 'POST');\r\n        if ( resp.ok ) {\r\n            localStorage.setItem('token', resp.token );\r\n            const { usuario: {uid, nombre, email} } = resp;\r\n            setAuth({\r\n                uid: uid,\r\n                checking: false,\r\n                logged: true,\r\n                name: nombre,\r\n                email: email\r\n            });\r\n        }\r\n\r\n        return resp.msg;\r\n    }\r\n\r\n    const verifyToken = useCallback(async() => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            setAuth({\r\n                uid: null,\r\n                checking: false,\r\n                logged: false,\r\n                name: null,\r\n                email: null\r\n            });\r\n\r\n            return false;\r\n        }\r\n\r\n        const resp = await fetchConToken('login/renew');\r\n        if (resp.ok) {\r\n            localStorage.setItem('token', resp.token );\r\n            const { usuario: {uid, nombre, email} } = resp;\r\n            setAuth({\r\n                uid: uid,\r\n                checking: false,\r\n                logged: true,\r\n                name: nombre,\r\n                email: email\r\n            });\r\n            return true;\r\n        } else {\r\n            setAuth({\r\n                uid: null,\r\n                checking: false,\r\n                logged: false,\r\n                name: null,\r\n                email: null\r\n            });\r\n\r\n            return false;\r\n        }\r\n    },[]);\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        dispatch({ type: types.cerrarSesion});\r\n        setAuth({\r\n            checking: false,\r\n            logged: false,\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value = {{\r\n                auth,\r\n                login,\r\n                register,\r\n                verifyToken,\r\n                logout\r\n            }}\r\n        >\r\n            { children }\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { createContext } from 'react';\r\n\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { useSocket } from '../hooks/useSocket'\r\nimport { ChatContext } from './chat/ChatContext';\r\n\r\nimport { types } from '../types/types';\r\nimport { scrollToBottomAnimated } from '../helpers/scrollToBottom';\r\n\r\nexport const SocketContext = createContext();\r\n\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n\r\n    const { socket, online, connectSocket, disconnectSocket } = useSocket('http://localhost:8080');\r\n    const { auth } = useContext(AuthContext);\r\n    const { dispatch } = useContext(ChatContext);\r\n\r\n    useEffect(() => {\r\n        if (auth.logged) {\r\n            connectSocket()\r\n        }\r\n    }, [auth, connectSocket]);\r\n\r\n    useEffect(() => {\r\n        if (!auth.logged) {\r\n            disconnectSocket()\r\n        }\r\n    }, [auth, disconnectSocket])\r\n\r\n    // Escuchar los cambios en los usuarios conectados\r\n    useEffect(() => {\r\n        socket?.on('lista-usuarios', (usuarios) => {\r\n            dispatch({\r\n                type: types.usuariosCargados,\r\n                payload: usuarios\r\n            })\r\n        })\r\n    }, [socket, dispatch]);\r\n\r\n    useEffect(() => {\r\n        socket?.on('mensaje-personal', (mensaje) => {\r\n            // TODO: Dispatch de una acción\r\n            dispatch({\r\n                type: types.nuevoMensaje,\r\n                payload: mensaje\r\n            });\r\n            // TODO: Mover el scroll al final\r\n            scrollToBottomAnimated('mensajes');\r\n        });\r\n    }, [socket, dispatch])\r\n    \r\n    return (\r\n        <SocketContext.Provider value={{ socket, online }}>\r\n            { children }\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\n\r\nexport const useSocket = ( serverPath ) => {\r\n    const [socket, setSocket] = useState(null)\r\n    const [ online, setOnline ] = useState(false);\r\n\r\n    const connectSocket = useCallback(() => {\r\n        const token = localStorage.getItem('token');\r\n        const socketTemp = io.connect( serverPath, {\r\n            transports: ['websocket'],\r\n            autoConnect: true,\r\n            forceNew: true,\r\n            query: {\r\n                'x-token': token\r\n            }\r\n        });\r\n        setSocket(socketTemp);\r\n    },[serverPath]);\r\n\r\n    const disconnectSocket = useCallback(() => {\r\n       socket?.disconnect();\r\n    },[socket]);\r\n\r\n    useEffect(() => {\r\n        setOnline( socket?.connected );\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket?.on('connect', () => setOnline( true ));\r\n    }, [ socket ])\r\n\r\n    useEffect(() => {\r\n        socket?.on('disconnect', () => setOnline( false ));\r\n    }, [ socket ])\r\n\r\n    return {\r\n        socket,\r\n        online,\r\n        connectSocket,\r\n        disconnectSocket\r\n    }\r\n}","import { animateScroll } from 'react-scroll'\r\n\r\nexport const scrollToBottom = ( id ) => {\r\n    animateScroll.scrollToBottom({\r\n        containerId: id,\r\n        duration: 0\r\n    });\r\n}\r\n\r\nexport const scrollToBottomAnimated = ( id ) => {\r\n    animateScroll.scrollToBottom({\r\n        containerId: id,\r\n        duration: 250\r\n    });\r\n}","import React from 'react'\n\nexport const ChatSelect = () => {\n    return (\n        <div className=\"middle-screen\">\n            <div className=\"alert-info\">\n                <hr />\n                <h3>Seleccione una persona</h3>\n                <span>\n                    Para comenzar una conversación\n                </span>\n\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { AuthContext } from '../auth/AuthContext'\n\nexport const Searchbox = () => {\n\n    const { auth, logout } = useContext(AuthContext);\n\n    return (\n        <div className=\"headind_srch\">\n            <div className=\"recent_heading mt-2\">\n                <h4>{ auth.name }</h4>\n            </div>\n            <div className=\"srch_bar\">\n                <div className=\"stylish-input-group\">\n                    <button onClick={ logout } className=\"btn text-danger\">\n                        Salir\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { ChatContext } from '../context/chat/ChatContext';\nimport { fetchConToken } from '../helpers/fetch';\nimport { scrollToBottom } from '../helpers/scrollToBottom';\nimport { types } from '../types/types';\n\nexport const SidebarChatItem = ({ usuario }) => {\n    const { chatState, dispatch } = useContext( ChatContext );\n    const { chatActivo } = chatState;\n    \n\n    const onClick = async() => {\n        dispatch({\n            type: types.activarChat,\n            payload: usuario.uid\n        });\n\n        // Cargar los mensajes del chat\n        const { mensajes } = await fetchConToken(`mensajes/${usuario.uid}`);\n\n        dispatch({\n            type: types.cargarMensajes,\n            payload: mensajes\n        })\n\n        // TODO: Mover el scroll \n        scrollToBottom('mensajes')\n    }\n    return (\n        <div\n            className={`chat_list ${(usuario.uid === chatActivo) && 'active_chat'}`}\n            onClick= { onClick }\n        >\n            {/* active_chat */}\n            <div className=\"chat_people\">\n                <div className=\"chat_img\">\n                    <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" />\n                </div>\n                <div className=\"chat_ib\">\n                    <h5> {usuario.nombre} </h5>\n                    {\n                        (usuario.online)\n                            ? <span className=\"text-success\">Online</span>\n                            : <span className=\"text-danger\">Offline</span>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { AuthContext } from '../auth/AuthContext';\nimport { ChatContext } from '../context/chat/ChatContext'\nimport { SidebarChatItem } from './SidebarChatItem'\n\nexport const Sidebar = () => {\n\n    const { chatState: {usuarios} } = useContext(ChatContext);\n    const { auth } = useContext(AuthContext)\n    const { uid } = auth;\n\n    return (\n        <div className=\"inbox_chat\">\n\n            {\n                usuarios\n                    .filter(user => user.uid !== uid)\n                    .map((usuario) => (\n                        <SidebarChatItem\n                            key={usuario.uid}\n                            usuario={usuario}\n                        />\n                    ))\n            }\n\n            {/* <!-- Espacio extra para scroll --> */}\n            <div className=\"extra_space\"></div>\n\n\n        </div>\n\n    )\n}\n","import React from 'react';\nimport { Searchbox } from './Searchbox';\nimport { Sidebar } from './Sidebar';\n\nexport const InboxPeople = () => {\n    return (\n        <div className=\"inbox_people\">\n\n            <Searchbox />\n\n            <Sidebar />\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const IncomingMessage = ({msg}) => {\n    return (\n        <div className=\"incoming_msg\">\n            <div className=\"incoming_msg_img\">\n                <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" />\n            </div>\n            <div className=\"received_msg\">\n                <div className=\"received_withd_msg\">\n                    <p>{msg.mensaje}</p>\n                    <span className=\"time_date\"> {msg.fecha}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const OutgoingMessage = ({msg}) => {\n    return (\n        <div className=\"outgoing_msg\">\n            <div className=\"sent_msg\">\n                <p>{msg.mensaje}</p>\n                <span className=\"time_date\">{msg.fecha}</span>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport { AuthContext } from '../auth/AuthContext';\nimport { ChatContext } from '../context/chat/ChatContext';\nimport { SocketContext } from '../context/SocketContext';\n\nexport const SendMessage = () => {\n    const [message, setMessage] = useState('');\n    const { socket } = useContext(SocketContext);\n    const { auth: {uid}} = useContext(AuthContext)\n    const { chatState: { chatActivo} } = useContext(ChatContext)\n\n    const onChange = ({ target: { value }} ) => {\n        setMessage(value);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if(message.length === 0) return;\n        setMessage('');\n\n        // TODO: Emitir un evento de socket para enviar el mensaje\n        // {\n        //     de: // UID del usuario enviando el mensaje\n        //     para: // UID del usuario que recibe el mensaje\n        //     mensaje: // lo que quiero enviar \n        // }\n\n        socket.emit('mensaje-personal', {\n            de: uid,\n            para: chatActivo,\n            mensaje: message\n        });\n\n        // TOD: hacer el dispatch de el mensaje\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <div className=\"type_msg row\">\n                <div className=\"input_msg_write col-sm-9\">\n                    <input \n                        type=\"text\" \n                        className=\"write_msg\" \n                        placeholder=\"Mensaje...\"\n                        value={ message }\n                        onChange={ onChange } \n                    />\n                </div>\n                <div className=\"col-sm-3 text-center\">\n                    <button className=\"msg_send_btn mt-3\" type=\"submit\">\n                        enviar\n                    </button>\n                </div>\n            </div>\n        </form>\n    )\n}\n","import React, { useContext } from 'react';\nimport { AuthContext } from '../auth/AuthContext';\nimport { ChatContext } from '../context/chat/ChatContext';\nimport { IncomingMessage } from './IncomingMessage';\nimport { OutgoingMessage } from './OutgoingMessage';\nimport { SendMessage } from './SendMessage';\n\nexport const Messages = () => {\n\n    const {  chatState: { mensajes } } = useContext(ChatContext);\n    const { auth: { uid } } = useContext(AuthContext)\n\n    return (\n        <div className=\"mesgs\">\n\n            {/* <!-- Historia inicio --> */}\n            <div\n                id=\"mensajes\" \n                className=\"msg_history\"\n            >\n\n                {\n                    mensajes.map( msg => (\n                        ( msg.para === uid )\n                            ? <IncomingMessage key={ msg._id } msg={msg} />\n                            : <OutgoingMessage key={ msg._id } msg={msg} />\n                    ))\n                }\n\n                \n\n            </div>\n            {/* <!-- Historia Fin --> */}\n\n           <SendMessage />\n\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\nimport { ChatSelect } from '../components/ChatSelect';\nimport { InboxPeople } from '../components/InboxPeople';\nimport { Messages } from '../components/Messages';\nimport { ChatContext } from '../context/chat/ChatContext';\n\n\nimport '../css/chat.css';\n\nexport const ChatPage = () => {\n    const { chatState } = useContext(ChatContext)\n    return (\n        <div className=\"messaging\">\n            <div className=\"inbox_msg\">\n\n                <InboxPeople />\n\n                {\n                    (chatState.chatActivo)\n                        ? <Messages />\n                        : <ChatSelect />\n                }\n                \n\n            </div>\n\n\n        </div>\n    )\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { AuthContext } from '../auth/AuthContext';\n\nexport const LoginPage = () => {\n\n    const { login } = useContext(AuthContext);\n\n    const [form, setForm] = useState({\n        email: '',\n        password: '',\n        rememberme: false\n    });\n\n    useEffect(() => {\n        const email = localStorage.getItem('email');\n        if (email) {\n            setForm( (form) => ({\n                ...form,\n                email,\n                rememberme: true,\n            }));\n        }\n    }, [])\n\n    const onChange = ({target}) => {\n        const { name, value } = target;\n        setForm({\n            ...form,\n            [name]: value\n        });\n    }\n\n    const toggleCheck = () => {\n        setForm({\n            ...form,\n            rememberme: !form.rememberme\n        })\n    }\n\n    const onSubmit = async(e) => {\n        e.preventDefault();\n        if (form.rememberme) {\n            localStorage.setItem('email', form.email);\n        } else {\n            localStorage.removeItem('email')\n        }\n        const { email, password} = form;\n        const ok = await login( email, password );\n        if (!ok ) {\n            Swal.fire('Error', 'Verifique el usuario y contraseña', 'error')\n        }\n    }\n\n    const todoOK = () => {\n        return (form.email.length > 0 && form.password.length > 0 ) ? true: false;\n    }\n\n    return (\n        <form \n            className=\"login100-form validate-form flex-sb flex-w\"\n            onSubmit={onSubmit}    \n        >\n            <span className=\"login100-form-title mb-3\">\n                Chat - Ingreso\n            </span>\n            \n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input \n                    className=\"input100\" \n                    type=\"email\" \n                    name=\"email\" \n                    placeholder=\"Email\"\n                    value={form.email}\n                    onChange={ onChange }\n                />\n                <span className=\"focus-input100\"></span>\n            </div>\n            \n            \n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input \n                    className=\"input100\" \n                    type=\"password\" \n                    name=\"password\" \n                    placeholder=\"Password\" \n                    value={form.password}\n                    onChange={ onChange }\n                />\n                <span className=\"focus-input100\"></span>\n            </div>\n            \n            <div className=\"row mb-3\">\n                <div \n                    className=\"col\"\n                    onClick = {() => toggleCheck()}\n                >\n                    <input \n                        className=\"input-checkbox100\" \n                        id=\"ckb1\" \n                        type=\"checkbox\" \n                        name=\"rememberme\" \n                        checked={form.rememberme}\n                        readOnly\n                    />\n                    <label className=\"label-checkbox100\">\n                        Recordarme\n                    </label>\n                </div>\n\n                <div className=\"col text-right\">\n                    <Link to=\"/auth/register\" className=\"txt1\">\n                        Nueva cuenta?\n                    </Link>\n                </div>\n            </div>\n\n            <div className=\"container-login100-form-btn m-t-17\">\n                <button\n                    type=\"submit\" \n                    className=\"login100-form-btn\"\n                    disabled={!todoOK()}\n                >\n                    Ingresar\n                </button>\n            </div>\n\n        </form>\n    )\n}\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../auth/AuthContext';\nimport Swal from 'sweetalert2';\n\nexport const RegisterPage = () => {\n    const { register } = useContext(AuthContext);\n\n    const [form, setForm] = useState({\n        nombre: '',\n        email: '',\n        password: '',\n    });\n\n\n    const onChange = ({target}) => {\n        const { name, value } = target;\n        setForm({\n            ...form,\n            [name]: value\n        });\n    }\n\n\n    const onSubmit = async(e) => {\n        e.preventDefault();\n        const { nombre, email, password} = form;\n        const msg = await register(nombre, email, password );\n        if (msg) {\n            Swal.fire('Error', msg, 'error')\n        }\n    }\n\n    const todoOK = () => {\n        return (form.nombre.length > 0 && form.email.length > 0 && form.password.length > 0 ) ? true: false;\n    }\n\n    return (\n        <form\n            className=\"login100-form validate-form flex-sb flex-w\"\n            onSubmit = {onSubmit} \n        >\n            <span className=\"login100-form-title mb-3\">\n                Chat - Registro\n            </span>\n\n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input \n                    className=\"input100\" \n                    type=\"text\" \n                    name=\"nombre\" \n                    placeholder=\"Nombre\" \n                    value={form.nombre}\n                    onChange={ onChange }\n                />\n                <span className=\"focus-input100\"></span>\n            </div>\n\n            \n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input \n                    className=\"input100\" \n                    type=\"email\" \n                    name=\"email\" \n                    placeholder=\"Email\"\n                    value={form.email}\n                    onChange={ onChange }\n                />\n                <span className=\"focus-input100\"></span>\n            </div>\n            \n            \n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input \n                    className=\"input100\" \n                    type=\"password\" \n                    name=\"password\" \n                    placeholder=\"Password\" \n                    value={form.password}\n                    onChange={ onChange }\n                />\n                <span className=\"focus-input100\"></span>\n            </div>\n            \n            <div className=\"row mb-3\">\n                <div className=\"col text-right\">\n                    <Link to=\"/auth/login\" className=\"txt1\">\n                        Ya tienes cuenta?\n                    </Link>\n                </div>\n            </div>\n\n            <div className=\"container-login100-form-btn m-t-17\">\n                <button\n                    type=\"submit\" \n                    className=\"login100-form-btn\"\n                    disabled={!todoOK()}\n                >\n                    Crear cuenta\n                </button>\n            </div>\n\n        </form>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { LoginPage } from '../pages/LoginPage';\nimport { RegisterPage } from '../pages/RegisterPage';\n\nimport '../css/login-register.css';\n\nexport const AuthRouter = () => {\n    return (\n\n        <div className=\"limiter\">\n\t\t    <div className=\"container-login100\">\n\t\t\t    <div className=\"wrap-login100 p-t-50 p-b-90\">\n\n                    <Switch>\n                        <Route exact path=\"/auth/login\" component={ LoginPage } />\n                        <Route exact path=\"/auth/register\" component={ RegisterPage } />\n\n                        <Redirect to=\"/auth/login\" />\n                    </Switch>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            { ...rest}\r\n            component={(props) => (\r\n                ( isAuthenticated ) ?\r\n                <Component {...props} />:\r\n                <Redirect to=\"/auth\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            { ...rest}\r\n            component={(props) => (\r\n                ( !isAuthenticated ) ?\r\n                <Component {...props} />:\r\n                <Redirect to=\"/\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n  } from 'react-router-dom';\nimport { AuthContext } from '../auth/AuthContext';\n\nimport { ChatPage } from '../pages/ChatPage';\nimport { AuthRouter } from './AuthRouter';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\n\nexport const AppRouter = () => {\n    const { auth, verifyToken } = useContext(AuthContext);\n\n    useEffect(() => {\n        verifyToken()\n    }, [verifyToken])\n\n    if (auth.checking) {\n        return <h1>Espere por favor</h1>\n    }\n    return (\n        <Router>\n            <div>\n                \n                <Switch>\n                    {/* <Route path=\"/auth\" component={ AuthRouter } /> */}\n                    <PublicRoute \n                        isAuthenticated={ auth.logged }\n                        path=\"/auth\"\n                        component={ AuthRouter }\n                    />\n                    {/* <Route exact path=\"/\" component={ ChatPage } /> */}\n                    <PrivateRoute \n                        isAuthenticated={ auth.logged }\n                        path=\"/\"\n                        component={ ChatPage }\n                    />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n            </Router>\n    )\n}\n","import React from 'react';\nimport { AuthProvider } from './auth/AuthContext';\nimport { ChatProvider } from './context/chat/ChatContext';\nimport { SocketProvider } from './context/SocketContext';\nimport { AppRouter } from './router/AppRouter';\n\nexport const ChatApp = () => {\n    return (\n        <ChatProvider>\n            <AuthProvider>\n                <SocketProvider>\n                    <AppRouter />\n                </SocketProvider>\n            </AuthProvider>\n        </ChatProvider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChatApp } from './ChatApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <ChatApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}